<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>

        * {
            margin: 0;
            padding: 0;
        }

        body {
            background: linear-gradient(to right, #ff9966, #ff5e62);
        }

        div.url {
            display: flex;
            align-content: center;
            align-items: center;
            justify-content: center;
        }

        .url > h2 {
            margin: 10px 20px;
            padding: 0;
        }

        .url > h2 > a {
            text-decoration: none;
            color: #000;
        }

        div.offline-indicator {
            display: inline-block;
            width: 15px;
            height: 15px;
            margin-right: 10px;

            background-color: red;
            border-radius: 50%;

            position: relative;
        }

        div.online-indicator {
            display: inline-block;
            width: 15px;
            height: 15px;
            margin-right: 10px;

            background-color: #0fcc45;
            border-radius: 50%;

            position: relative;
        }

        span.blink {
            display: block;
            width: 15px;
            height: 15px;

            background-color: #0fcc45;
            opacity: 0.7;
            border-radius: 50%;

            animation: blink 1s linear infinite;
        }

        @keyframes blink {
            100% {
                transform: scale(2, 2);
                opacity: 0;
            }
        }
    </style>
</head>
<body>
<div class="wrapper">
</div>

<script>
    window.addEventListener('load', async () => {
        const data = await (await fetch('http://localhost:3000/api/websites')).json();
        for (const {http, https} of data) {
            const div1 = createUrlDiv(http, https);
            document.querySelector('.wrapper').appendChild(div1);
        }
    })

    const createUrlDiv = (urlData, urlData2) => {
        const div = document.createElement('div');
        div.classList.add('url');
        createInnerContent(urlData, div);
        createInnerContent(urlData2, div);
        return div;
    }

    const createInnerContent = (data, div) => {
        let h2 = document.createElement('h2');
        let a = document.createElement('a');
        a.href = data._url;
        a.innerText = data._url;
        h2.appendChild(a);
        div.appendChild(h2);
        const indicator = document.createElement('div');
        if (data._status) {
            indicator.classList.add('online-indicator');
            const blink = document.createElement('span');
            blink.classList.add('blink');
            indicator.appendChild(blink);
        } else {
            indicator.classList.add('offline-indicator');
            const span = document.createElement('span');
            indicator.appendChild(span);
        }
        div.appendChild(indicator);
    }


</script>

</body>
</html>